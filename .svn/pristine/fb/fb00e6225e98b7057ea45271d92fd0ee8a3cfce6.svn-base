/*****************************************************
 * Purpose: Facet Sales Channel Page Object
 * Created by: Jitendra/Srinivas
 * Created on: Aug-23-2013
 * Last Modified on: 10-Sep-2013
 *****************************************************/
package com.wwt.scm;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;


public class FilterInstallSiteCustomer {
	
		protected final WebDriver driver;
		
		@FindBy(id="st_site_name")
		private WebElement installSiteCustomerIcon;
		
		@FindBy(css="div[class='container-fluid'] div[class='input-append'] input[placeholder='Filter Install Site Customer']")
		private WebElement installSiteCustinputbox;
		
		@FindBy(css="div[id='st_site_name-data'] i[class*='icon-remove']")
		private WebElement installfilterdropdown;

		@FindBy(css="div#st_site_name-data.facet-popover div.row-fluid div.span12 div.span12 div.span2 button#remove-selected-facets.btn")
		private  WebElement removeinsCustfacet;
		
		@FindBy(css="div#st_site_name-data.facet-popover div.row-fluid div.span12 div#main-facet-display.span12 ul#facet-list-item.nav li.ng-scope a.span12")
		private List<WebElement> installsiteCustFacetList;
		
		String installsiteSearchString=null;

		public FilterInstallSiteCustomer(WebDriver driver) {
			this.driver = driver;
		}
	
		//Clicking on Install Site Customer Icon
		public void installSiteCustomerIconIconClick(){
			try{
				installSiteCustomerIcon.click();
				Thread.sleep(2000);
			} catch(Exception e){
				e.printStackTrace();
			}	
		}
		//2. Entering the Install Site Customer Customer name to Filter in the Install Site Customer Filter Box.
		public void enterinstallsiteCustName(String installsiteName){
			try{
				installsiteSearchString = installsiteName;
				installSiteCustinputbox.sendKeys(installsiteName);
				Thread.sleep(4000);				
			}catch(Exception e){
				e.printStackTrace();
			}
		}
	    //Close the Install Site Customer Filter List
		public void closeinstallSiteCustFacet(){
			try{
		    	installfilterdropdown.click(); 
		    	Thread.sleep(2000);
			}catch(Exception e){
				e.printStackTrace();
			}
		}  
		// remove install site customer from facet
	    public void removeinsCustfromFacet(){
	    	try{
		    	removeinsCustfacet.click();
		    	Thread.sleep(2000);	    		
	    	} catch(Exception e){
	    		e.printStackTrace();
	    	}

	    }		
		// Verify Search items displayed in facet has Customer name
	    public boolean verifyinstallsiteFacetSearchResult(){
	    	try{
	    	for(int i=0;i<installsiteCustFacetList.size();i++){
	    		if ( !installsiteCustFacetList.get(i).getAttribute("title").toLowerCase().contains(installsiteSearchString.toLowerCase())){
	    			return false;
	    		}
	    	}
	    	} catch(Exception e){
	    		e.printStackTrace();
	    		return false;
	    	}
	    	return true;
	    } 
	    // Method to get record count from search facet install site display for a single line
	    public int getcountfrominstallSiteFacet(String displayedChannel){
	    	String recordnum=""; 
	    	try{
		    	 Pattern p =  Pattern.compile("\\((.*?)\\)",Pattern.DOTALL);
			   	 Matcher matcher = p.matcher(displayedChannel.trim());
			   	 while(matcher.find()){
			   		recordnum = matcher.group(1);
			   		recordnum = recordnum.replace(",","");  
			   	 }
	    	}catch(Exception e){
	    		e.printStackTrace();
	    	}
		   	 return (new Integer(recordnum));   
	    }
	    // To get total count from the items displayed in facet search including multiple rows
	    public int getRecordcountfromInstallSiteFacetSearch() {
	    	int reccount = 0;
	    	try{
		    	for(int i=0; i<installsiteCustFacetList.size();i++){
		    		int mycount = getcountfrominstallSiteFacet(installsiteCustFacetList.get(i).getText());
		    		reccount = reccount+mycount ;
		    	}
	    	}catch (Exception e){
	    		e.printStackTrace();
	    	}
		   	return reccount;   	
	    }
	    // To add all sales channels displayed in facet search to Main search option
	    public boolean addInstallSiteCusttoSearch(){
	    	try{	
	    		 int saleschannellistsize = installsiteCustFacetList.size();
		    	while(saleschannellistsize > 0){
		    		System.out.println(installsiteCustFacetList.get(0).getText());
		    		installsiteCustFacetList.get(0).click();
		    		Thread.sleep(1000);
		    		if (saleschannellistsize > 1){
		    			saleschannellistsize = installsiteCustFacetList.size();    				
		    		} else {
		    			break;
		    		}
		    	}
	    	}catch(Exception e){
	    		e.printStackTrace();
	    		return false;
	    	}
	    	return true;
	    }     
 }
    

   
    
    
   
   
   


   
   