/*****************************************************
 * Purpose: Date Facet Search Page Object
 * Created by:Jitendra/ Srinivas
 * Created on: 
 * Modified on: Aug-23-2013, Aug-26-2013
 *****************************************************/
package com.wwt.scm;


import java.text.ParseException;
import java.util.List;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.FindBy;

public class FilterDateSelection {
	
		protected final WebDriver driver;
		
		@FindBy(id="calendarSearch")
		private WebElement dateSearchIcon;
		
		@FindBy(css="div[id='date-search-container'] div[class='add-on date-search-header ng-binding']")
		private List<WebElement> filterDateTypes;
		
		@FindBy(css="i[id=date-search-close][class*='icon-remove']")
		private WebElement closedatetypeFace;
		
		List<WebElement> dateTypes;
		int datetypescount =0;
		int counter = 0;
		WebElement verifyMonthYear = null;
		WebElement verifyYear = null;
		String monthYear=null;
			
	    public FilterDateSelection(WebDriver driver) {
		        
	    	this.driver = driver;
		}
    
	    //1. Clicking on the Date Calendar Icon.
	    public void dateSearchIconClick() throws InterruptedException{
	    	dateSearchIcon.click();
	    	Thread.sleep(2000);
    		dateTypes = getAlldateTypes();	
			datetypescount = dateTypes.size();
		}
	 
	    //2. It will return all date Types that are available in the Date Selection Drop down.
		 public List<WebElement> getAlldateTypes() throws InterruptedException{
		   		Thread.sleep(1000);
		 		return filterDateTypes;
		 }
		   
		 //3. Clicking on Required Date Type icon (Clicks on From Date or To Date based on requirement)
		public void clickOnRequiredDateType(String dateType, String fromDate, int TotalfitleredDateTypes, List <WebElement> filteredDateTypes) throws InterruptedException{
			int dateTypeIndex = 0; 
			WebElement endDate_StartDateInbox = null;
			for(int i = 0; i<TotalfitleredDateTypes; i++){
				  if(filteredDateTypes.get(i).getText().equalsIgnoreCase(dateType)){
					  dateTypeIndex = i+1;
					  break;
				  }
			}
			int calendarButtonType = 1;
			if(!fromDate.equalsIgnoreCase("from")){
				  calendarButtonType = 2;	
			}
			Thread.sleep(1000);
			String s = ".//*[@id='date-search-container']/div["+dateTypeIndex+"]/div[2]/button["+calendarButtonType+"]";
			Thread.sleep(1000);
			endDate_StartDateInbox = driver.findElement(By.xpath(s));		   				
			Actions mouseClick = new Actions(driver);
			mouseClick.click(endDate_StartDateInbox).perform();
		}
		
		//finding whether the date has to pick the to date or from date.
		public int from_OR_toCalender_ToClick(String fromTo){
			int divFrom = 2;
			if(fromTo.equalsIgnoreCase("to")){
				divFrom=3;
			}
			return  divFrom;		
		}
		//4. Verifying if the current displaying year is the one which we are looking for.
		public boolean verifyYear(String year, int calenderToClick) throws InterruptedException{
			boolean yearVerifycation = false;
			String syear = ".//*[@id='ng-app']/body/div["+calenderToClick+"]/div[1]/table/thead/tr[1]/th[2]";
				Thread.sleep(2000);
				verifyMonthYear = driver.findElement(By.xpath(syear));
				String YR = verifyMonthYear.getText();
				if(YR==year){
						yearVerifycation = true;
				}
			return yearVerifycation;
		}
	
		//5. If the displaying year is not the current year then it will pick the required year.
		public int yearPicker(String yr, int from_to) throws InterruptedException{
				Integer YEARtoSELECT = new Integer(yr);
				System.out.println("Entered Year Picker : ");
				String sCurrentYear = ".//*[@id='ng-app']/body/div["+from_to+"]/div[2]/table/thead/tr/th[2]";
				WebElement verifyCurrentYear = driver.findElement(By.xpath(sCurrentYear));
				String presentDisplayYear = verifyCurrentYear.getText();
				Integer displayYear = new Integer(presentDisplayYear);
				int yearDiff = 0;
				if(YEARtoSELECT < displayYear){
					yearDiff = displayYear - YEARtoSELECT;
				}else if(YEARtoSELECT>displayYear){
					yearDiff = YEARtoSELECT-displayYear;
					
				}
				return yearDiff;			
		}
		public int arrowToClick(String CurrentYear, int From_to){
			Integer YEARtoSELECT = new Integer(CurrentYear);
			System.out.println("Entered Year Picker : ");
			String sCurrentYear = ".//*[@id='ng-app']/body/div["+From_to+"]/div[2]/table/thead/tr/th[2]";
			WebElement verifyCurrentYear = driver.findElement(By.xpath(sCurrentYear));
			String presentDisplayYear = verifyCurrentYear.getText();
			Integer displayYear = new Integer(presentDisplayYear);
			int Arrow_to_Click = 1;
			if(YEARtoSELECT > displayYear){
				Arrow_to_Click = 3;
			}
			return Arrow_to_Click;
		}
		
		//6. If the year is current year, then we need to verify the month is current month or not. 
		public boolean verifyMonth(String month,int fromTo) throws InterruptedException{
			boolean monthBoolean = true;
			String smonth = ".//*[@id='ng-app']/body/div["+fromTo+"]/div[1]/table/thead/tr[1]/th[2]";
			Thread.sleep(1000);
			verifyMonthYear = driver.findElement(By.xpath(smonth));
			monthYear = verifyMonthYear.getText();
			if(!((monthYear.contains(month))&&(counter==0))){
					monthBoolean = false;
			}
			return monthBoolean;
		}

		//7. If the month which we are selecting is not the current month then this method will pick the required month.
		void monthPicker(String monthToSelect, int divFrom) throws InterruptedException 
		{
				int l=0;
				switch(monthToSelect){
				case "Jan":
					l=1;
					break;
				case "Feb":
					l=2;
					break;
				case "Mar":
					l=3;
					break;
				case "Apr":
					l=4;
					break;
				case "May":
					l=5;
					break;
				case "Jun":
					l=6;
					break;
				case "Jul":
					l=7;
					break;
				case "Aug":
					l=8;
					break;
				case "Sep":
					l=9;
					break;
				case "Oct":
					l=10;
					break;
				case "Nov":
					l=11;
					break;
				case "Dec":
					l=12;
					break;
				}
				String monthPickTable = ".//*[@id='ng-app']/body/div[" +divFrom+"]/div[2]/table/tbody/tr/td/span["+l+"]";
				Thread.sleep(1000);
				WebElement monthSelect = driver.findElement(By.xpath(monthPickTable));		   				
				Thread.sleep(1000);
				Actions mouseClick = new Actions(driver);
				Thread.sleep(1000);
				mouseClick.click(monthSelect).perform();
		}	

	
		//8. To get the required Month from the Months display menu
		public void monthHeaderClick() throws InterruptedException{
			Actions clickForMonthSelection = new Actions(driver);
			Thread.sleep(1000);
			clickForMonthSelection.click(verifyMonthYear).perform();
		}
	
		//9. To get the required Date from the Calendar Display menu 
		public void yearHeaderClick(int arrowClick, int fromTo) throws InterruptedException{
			String arrow = ".//*[@id='ng-app']/body/div["+fromTo+"]/div[2]/table/thead/tr/th["+arrowClick+"]/i";
			WebElement getYear = driver.findElement(By.xpath(arrow));
			Actions clickForYear = new Actions(driver);
			Thread.sleep(1000);
			clickForYear.click(getYear).perform();
		}
		//10. Selecting the date.
		public void dateSelector(String requiredDate, int fromOrTo) throws InterruptedException{
				for(int row = 1; row<=6; row++){
					for(int col = 1; col<=7; col++){
						int c = 0;
						if(c==0){
							String date1 = ".//*[@id='ng-app']/body/div["+fromOrTo+"]/div[1]/table/tbody/tr["+row +"]/td["+col+"]";
							WebElement dateElement = driver.findElement(By.xpath(date1));
							String dateClassAttribute = dateElement.getAttribute("class");
							if(!(dateClassAttribute.equalsIgnoreCase("day old") || dateClassAttribute.equalsIgnoreCase("day new"))){
									String expectedDate = dateElement.getText();
									if(expectedDate.equals(requiredDate)){
										dateElement.click();
										col=8;row=7;
										break;
									}
							}
						}
					}
				}
			}
	
		//10. Closing the Date menu    //6. Close the Customer Filter List
	    public void closeFilterDateDropDown() throws InterruptedException{
	    	closedatetypeFace.click(); 
	    	Thread.sleep(2000);
		    }
    
	    public void Dateset(String dateType, String fromTo,  String ddate) throws InterruptedException, ParseException{
	     		clickOnRequiredDateType(dateType, fromTo, datetypescount, dateTypes);
	     		String darray[] = ddate.split("/");
	     		String dYear = darray[0];
	     		String dMonth = darray[1];
	     		String dDay = darray[1];
		 		int datetoclick = from_OR_toCalender_ToClick(fromTo);
		 		boolean booleanYearto = verifyYear(dYear, datetoclick);
		 		if(!booleanYearto ){
			 		monthHeaderClick();
					int find_yearDiff_if_greater_less_than_currentYear = yearPicker(dYear, datetoclick);
					int incre_decre_arrowType_toClick =  arrowToClick(dYear, datetoclick);
					//Will Click on Side arrow (increment or decrement buttons) based on our year type
					for(int i = 1; i<=find_yearDiff_if_greater_less_than_currentYear; i++){
						yearHeaderClick(incre_decre_arrowType_toClick, datetoclick);
					}
					monthPicker(dMonth, datetoclick); 
			
		 		} else{
		 			boolean boolanMonth = verifyMonth(dMonth, datetoclick);  
		 			if(!boolanMonth){
		 				monthHeaderClick();
		 				monthPicker(dMonth, datetoclick);
		 			}
		 		}
		 		dateSelector(dDay, datetoclick);   
	    }
    
}