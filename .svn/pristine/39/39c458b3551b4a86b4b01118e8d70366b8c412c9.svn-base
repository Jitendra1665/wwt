/*****************************************************
 * Purpose: Facet Sales Channel Page Object
 * Created by: Jitendra/Srinivas
 * Created on: Aug-22-2013
 * Last Modified on: 10-Sep-2013
 *****************************************************/
package com.wwt.scm;

import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;


public class FilterSalesChannel {
	
	protected final WebDriver driver;
	
	@FindBy(css="a[id='cl_wwt_sales_channel']")
	private WebElement salesChannelIcon;

	@FindBy(css="div[class='container-fluid'] div[class='input-append'] input[placeholder='Filter Sales Channel']")
	private WebElement SalesChannelNameInputBox;

	@FindBy(css=("div[id='cl_wwt_sales_channel-data'] i[class*='icon-remove']"))
	private WebElement closesalesChannelFilter;

	@FindBy(css="div#cl_wwt_sales_channel-data.facet-popover div.row-fluid div.span12 div.span12 div.span2 button#remove-selected-facets.btn")
	private WebElement removeselectedfacet;

	@FindBy(css="div#cl_wwt_sales_channel-data.facet-popover div.row-fluid div.span12 div.span12 ul#facet-return-list-item.nav li.ng-scope a.span12")
	private List<WebElement> saleschannelfacetsearchlist;

	String searchSalesChannelName=null;

    public FilterSalesChannel(WebDriver driver) {
        this.driver = driver;
    }
    
    //Clicking on Sales Channel Icon
    public void salesChannelIconClick(){		
		try{    	
	    	salesChannelIcon.click();
		}catch(Exception e){
			e.printStackTrace();
		}    	
    }
    //Entering the Sales Channel Customer name to Filter in the Sales Channel Filter Box.
    public void enterSalesChannelName(String salesChannelFilterName){
		try{    	
	    	searchSalesChannelName = salesChannelFilterName;
			SalesChannelNameInputBox.sendKeys(salesChannelFilterName);
		}catch(Exception e){
			e.printStackTrace();
		}		
    }
    //Close the Sales Channel Filter List
    public void closeSalesChannelFilterDropDown(){
		try{    	
			closesalesChannelFilter.click(); 
		}catch(Exception e){
			e.printStackTrace();
		}
    }
    // Remove Channel from Facet
	public void removeChennelfromFacet(){
		try{
			removeselectedfacet.click();
			Thread.sleep(2000);
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	// Verify Search items displayed in facet has Sales channel name
    public boolean verifyFacetSearchResult(){
    	try{
    	for(int i=0;i<saleschannelfacetsearchlist.size();i++){
    		if ( !saleschannelfacetsearchlist.get(i).getAttribute("title").toLowerCase().contains(searchSalesChannelName.toLowerCase())){
    			return false;
    		}
    	}
    	} catch(Exception e){
    		e.printStackTrace();
    		return false;
    	}
    	return true;
    } 
    // Method to get record count from search facet sales channel display for a single line
    public int getcountfromSalesChannelFacet(String displayedChannel){
    	String recordnum=""; 
    	try{
	    	 Pattern p =  Pattern.compile("\\((.*?)\\)",Pattern.DOTALL);
		   	 Matcher matcher = p.matcher(displayedChannel.trim());
		   	 while(matcher.find()){
		   		recordnum = matcher.group(1);
		   		recordnum = recordnum.replace(",","");  
		   	 }
    	}catch(Exception e){
    		e.printStackTrace();
    	}
	   	 return (new Integer(recordnum));   
    }
    // To get total count from the items displayed in facet search including multiple rows
    public int getRecordcountfromSalesChannelFacetSearch() {
    	int reccount = 0;
    	try{
	    	for(int i=0; i<saleschannelfacetsearchlist.size();i++){
	    		int mycount = getcountfromSalesChannelFacet(saleschannelfacetsearchlist.get(i).getText());
	    		reccount = reccount+mycount ;
	    	}
    	}catch (Exception e){
    		e.printStackTrace();
    	}
	   	return reccount;   	
    }
    // to add all sales channels displayed in facet search to Main search option
    public boolean addsalesChanneltoSearch(){
    	try{	
    		 int saleschannellistsize = saleschannelfacetsearchlist.size();
	    	while(saleschannellistsize > 0){
	    		System.out.println(saleschannelfacetsearchlist.get(0).getText());
	    		saleschannelfacetsearchlist.get(0).click();
	    		Thread.sleep(1000);
	    		if (saleschannellistsize > 1){
	    			saleschannellistsize = saleschannelfacetsearchlist.size();    				
	    		} else {
	    			break;
	    		}
	    	}
    	}catch(Exception e){
    		e.printStackTrace();
    		return false;
    	}
    	return true;
    }
}
    

   
    
    
   
   
   


   
   